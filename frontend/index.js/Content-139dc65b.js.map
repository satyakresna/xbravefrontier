{"version":3,"file":"Content-139dc65b.js","sources":["../js/omniunits/components/Card.js","../js/omniunits/components/Content.js"],"sourcesContent":["export default function (omniunit) {\n  return document.createRange().createContextualFragment(`\n  <li class=\"omniunit-card\">\n    <div class=\"omniunit-card-container\">\n      <img data-src=\"https://res.cloudinary.com/satyakresna/image/upload/bravefrontier/omniunits/thumbnails/${omniunit.id}\" width=\"50\" height=\"50\" alt=\"${omniunit.name}'s thumbnail\" />\n      <p class=\"omniunit-card-name font-semibold tracking-wide\"><a href=\"omniunits/${omniunit.name.split(' ').join('_')}\">${omniunit.name}</a></p>\n    </div>\n  </li>\n  `);\n}","import OmniUnitCard from \"./Card.js\";\n\nexport default function (omniunits) {\n  if (Array.isArray(omniunits) && omniunits.length > 0) {\n    const fragement = document.createDocumentFragment();\n    const $omniUnitList = document.getElementById('omniunit-list');\n    $omniUnitList.textContent = '';\n    for (const omniunit of omniunits) {\n      fragement.appendChild(OmniUnitCard(omniunit));\n    }\n    $omniUnitList.appendChild(fragement);\n    document.querySelector('main').appendChild($omniUnitList);\n    if (window.previousOmniUnitsPage) {\n      window.scrollTo(0, window.previousOmniUnitsPage);\n    }\n    if (window.omniunits) {\n      observeContent(window.omniunits);\n    } else {\n      observeContent(omniunits);\n    }\n  } else {\n    document.querySelector('main #omniunit-list').remove();\n    document.querySelector('main').appendChild(document.createRange().createContextualFragment(`\n      <p class=\"text-center mt-4\">\n        <strong>Opps.. Not found. :(</strong>\n      </p>\n    `));\n  }\n}\n\nfunction observeContent(omniunits) {\n  if (Array.isArray(omniunits) && omniunits.length > 0) {\n    const lastElementChild = document.querySelector('ul#omniunit-list').lastElementChild;\n    const childrenElement = document.querySelector('ul#omniunit-list').children;\n    // Observe and do infinite scroll\n    let contentObserver = new IntersectionObserver(function (entries, self) {\n      if (entries[0].isIntersecting) {\n        const begin = (childrenElement.length - 1) + 1;\n        const end = childrenElement.length + 100;\n        if (childrenElement.length < omniunits.length) {\n          const nextOmniUnits = omniunits.slice(begin, end);\n          const fragement = document.createDocumentFragment();\n          for (const omniunit of nextOmniUnits) {\n            fragement.appendChild(OmniUnitCard(omniunit));\n          }\n          document.querySelector('ul#omniunit-list').appendChild(fragement);\n          observeContent(omniunits);\n        }\n        self.unobserve(entries[0].target);\n      }\n    }, {\n      root: null, // page as root\n      rootMargin: '0px',\n      threshold: 1.0\n    });\n\n    contentObserver.observe(lastElementChild);\n\n    observeThumbnail();\n  }\n}\n\nfunction observeThumbnail () {\n  const $images = document.querySelectorAll('[data-src]');\n  const config = {\n    rootMargin: '0px 0px 50px 0px',\n    threshold: 0\n  };\n\n  let imageObserver = new IntersectionObserver(function (entries, self) {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const src = entry.target.getAttribute('data-src');\n        if (!src) { return; }\n        entry.target.src = src;\n        self.unobserve(entry.target);\n      }\n    });\n  }, config);\n\n  $images.forEach(image => {\n    imageObserver.observe(image);\n  });\n}"],"names":["omniunit","document","createRange","createContextualFragment","id","name","split","join","omniunits","Array","isArray","length","fragement","createDocumentFragment","$omniUnitList","getElementById","textContent","appendChild","OmniUnitCard","querySelector","window","previousOmniUnitsPage","scrollTo","observeContent","remove","lastElementChild","childrenElement","children","IntersectionObserver","entries","self","isIntersecting","begin","end","nextOmniUnits","slice","unobserve","target","root","rootMargin","threshold","observe","$images","querySelectorAll","imageObserver","forEach","entry","src","getAttribute","image","observeThumbnail"],"mappings":"AAAe,WAAUA,GACvB,OAAOC,SAASC,cAAcC,yBAAyB,0LAGqDH,EAASI,mCAAmCJ,EAASK,4GAC9EL,EAASK,KAAKC,MAAM,KAAKC,KAAK,SAASP,EAASK,yCCHtH,WAAUG,GACvB,GAAIC,MAAMC,QAAQF,IAAcA,EAAUG,OAAS,EAAG,CACpD,MAAMC,EAAYX,SAASY,yBACrBC,EAAgBb,SAASc,eAAe,iBAC9CD,EAAcE,YAAc,GAC5B,IAAK,MAAMhB,KAAYQ,EACrBI,EAAUK,YAAYC,EAAalB,IAErCc,EAAcG,YAAYL,GAC1BX,SAASkB,cAAc,QAAQF,YAAYH,GACvCM,OAAOC,uBACTD,OAAOE,SAAS,EAAGF,OAAOC,uBAExBD,OAAOZ,UACTe,EAAeH,OAAOZ,WAEtBe,EAAef,QAGjBP,SAASkB,cAAc,uBAAuBK,SAC9CvB,SAASkB,cAAc,QAAQF,YAAYhB,SAASC,cAAcC,yBAAyB,0GAQ/F,SAASoB,EAAef,GACtB,GAAIC,MAAMC,QAAQF,IAAcA,EAAUG,OAAS,EAAG,CACpD,MAAMc,EAAmBxB,SAASkB,cAAc,oBAAoBM,iBAC9DC,EAAkBzB,SAASkB,cAAc,oBAAoBQ,SAE7C,IAAIC,sBAAqB,SAAUC,EAASC,GAChE,GAAID,EAAQ,GAAGE,eAAgB,CAC7B,MAAMC,EAASN,EAAgBf,OAAS,EAAK,EACvCsB,EAAMP,EAAgBf,OAAS,IACrC,GAAIe,EAAgBf,OAASH,EAAUG,OAAQ,CAC7C,MAAMuB,EAAgB1B,EAAU2B,MAAMH,EAAOC,GACvCrB,EAAYX,SAASY,yBAC3B,IAAK,MAAMb,KAAYkC,EACrBtB,EAAUK,YAAYC,EAAalB,IAErCC,SAASkB,cAAc,oBAAoBF,YAAYL,GACvDW,EAAef,GAEjBsB,EAAKM,UAAUP,EAAQ,GAAGQ,WAE3B,CACDC,KAAM,KACNC,WAAY,MACZC,UAAW,IAGGC,QAAQhB,GAM5B,WACE,MAAMiB,EAAUzC,SAAS0C,iBAAiB,cAM1C,IAAIC,EAAgB,IAAIhB,sBAAqB,SAAUC,EAASC,GAC9DD,EAAQgB,SAAQC,IACd,GAAIA,EAAMf,eAAgB,CACxB,MAAMgB,EAAMD,EAAMT,OAAOW,aAAa,YACtC,IAAKD,EAAO,OACZD,EAAMT,OAAOU,IAAMA,EACnBjB,EAAKM,UAAUU,EAAMT,cAXZ,CACbE,WAAY,mBACZC,UAAW,IAcbE,EAAQG,SAAQI,IACdL,EAAcH,QAAQQ,MAvBtBC"}